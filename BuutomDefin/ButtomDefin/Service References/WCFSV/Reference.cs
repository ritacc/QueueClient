//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace ButtomDefin.WCFSV {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QhandyOR", Namespace="http://schemas.datacontract.org/2004/07/QM.Entity.ParaSet")]
    public partial class QhandyOR : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BgField;
        
        private bool ButtomTypeField;
        
        private double ButtonHeightField;
        
        private double ButtonWidthField;
        
        private string EnlabelCaptionField;
        
        private bool EnlabelFontboldField;
        
        private int EnlabelFontcolorField;
        
        private bool EnlabelFontitalicField;
        
        private string EnlabelFontnameField;
        
        private int EnlabelFontsizeField;
        
        private bool EnlabelFontunderlineField;
        
        private int EnlabelLeftoffsetField;
        
        private int EnlabelTopoffsetField;
        
        private bool EnlabelVisibleField;
        
        private string IdField;
        
        private string LabelCaptionField;
        
        private bool LabelFontboldField;
        
        private int LabelFontcolorField;
        
        private bool LabelFontitalicField;
        
        private string LabelFontnameField;
        
        private int LabelFontsizeField;
        
        private bool LabelFontunderlineField;
        
        private int LabelIdxField;
        
        private string LabelJobnameField;
        
        private string LabelJobnoField;
        
        private int LabelLeftField;
        
        private string LabelPrintstrField;
        
        private bool LabelShadeField;
        
        private int LabelTopField;
        
        private string LabelTypeField;
        
        private bool LabelVisibleField;
        
        private string OrgbhField;
        
        private int ScreentypeField;
        
        private string TagCaptionField;
        
        private bool TagFontboldField;
        
        private int TagFontcolorField;
        
        private bool TagFontitalicField;
        
        private string TagFontnameField;
        
        private int TagFontsizeField;
        
        private bool TagFontunderlineField;
        
        private int TagLeftoffsetField;
        
        private int TagTopoffsetField;
        
        private bool TagVisibleField;
        
        private string WindowidField;
        
        private string WindowonidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bg {
            get {
                return this.BgField;
            }
            set {
                if ((object.ReferenceEquals(this.BgField, value) != true)) {
                    this.BgField = value;
                    this.RaisePropertyChanged("Bg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ButtomType {
            get {
                return this.ButtomTypeField;
            }
            set {
                if ((this.ButtomTypeField.Equals(value) != true)) {
                    this.ButtomTypeField = value;
                    this.RaisePropertyChanged("ButtomType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ButtonHeight {
            get {
                return this.ButtonHeightField;
            }
            set {
                if ((this.ButtonHeightField.Equals(value) != true)) {
                    this.ButtonHeightField = value;
                    this.RaisePropertyChanged("ButtonHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ButtonWidth {
            get {
                return this.ButtonWidthField;
            }
            set {
                if ((this.ButtonWidthField.Equals(value) != true)) {
                    this.ButtonWidthField = value;
                    this.RaisePropertyChanged("ButtonWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnlabelCaption {
            get {
                return this.EnlabelCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.EnlabelCaptionField, value) != true)) {
                    this.EnlabelCaptionField = value;
                    this.RaisePropertyChanged("EnlabelCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnlabelFontbold {
            get {
                return this.EnlabelFontboldField;
            }
            set {
                if ((this.EnlabelFontboldField.Equals(value) != true)) {
                    this.EnlabelFontboldField = value;
                    this.RaisePropertyChanged("EnlabelFontbold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnlabelFontcolor {
            get {
                return this.EnlabelFontcolorField;
            }
            set {
                if ((this.EnlabelFontcolorField.Equals(value) != true)) {
                    this.EnlabelFontcolorField = value;
                    this.RaisePropertyChanged("EnlabelFontcolor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnlabelFontitalic {
            get {
                return this.EnlabelFontitalicField;
            }
            set {
                if ((this.EnlabelFontitalicField.Equals(value) != true)) {
                    this.EnlabelFontitalicField = value;
                    this.RaisePropertyChanged("EnlabelFontitalic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnlabelFontname {
            get {
                return this.EnlabelFontnameField;
            }
            set {
                if ((object.ReferenceEquals(this.EnlabelFontnameField, value) != true)) {
                    this.EnlabelFontnameField = value;
                    this.RaisePropertyChanged("EnlabelFontname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnlabelFontsize {
            get {
                return this.EnlabelFontsizeField;
            }
            set {
                if ((this.EnlabelFontsizeField.Equals(value) != true)) {
                    this.EnlabelFontsizeField = value;
                    this.RaisePropertyChanged("EnlabelFontsize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnlabelFontunderline {
            get {
                return this.EnlabelFontunderlineField;
            }
            set {
                if ((this.EnlabelFontunderlineField.Equals(value) != true)) {
                    this.EnlabelFontunderlineField = value;
                    this.RaisePropertyChanged("EnlabelFontunderline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnlabelLeftoffset {
            get {
                return this.EnlabelLeftoffsetField;
            }
            set {
                if ((this.EnlabelLeftoffsetField.Equals(value) != true)) {
                    this.EnlabelLeftoffsetField = value;
                    this.RaisePropertyChanged("EnlabelLeftoffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnlabelTopoffset {
            get {
                return this.EnlabelTopoffsetField;
            }
            set {
                if ((this.EnlabelTopoffsetField.Equals(value) != true)) {
                    this.EnlabelTopoffsetField = value;
                    this.RaisePropertyChanged("EnlabelTopoffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnlabelVisible {
            get {
                return this.EnlabelVisibleField;
            }
            set {
                if ((this.EnlabelVisibleField.Equals(value) != true)) {
                    this.EnlabelVisibleField = value;
                    this.RaisePropertyChanged("EnlabelVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelCaption {
            get {
                return this.LabelCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelCaptionField, value) != true)) {
                    this.LabelCaptionField = value;
                    this.RaisePropertyChanged("LabelCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelFontbold {
            get {
                return this.LabelFontboldField;
            }
            set {
                if ((this.LabelFontboldField.Equals(value) != true)) {
                    this.LabelFontboldField = value;
                    this.RaisePropertyChanged("LabelFontbold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabelFontcolor {
            get {
                return this.LabelFontcolorField;
            }
            set {
                if ((this.LabelFontcolorField.Equals(value) != true)) {
                    this.LabelFontcolorField = value;
                    this.RaisePropertyChanged("LabelFontcolor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelFontitalic {
            get {
                return this.LabelFontitalicField;
            }
            set {
                if ((this.LabelFontitalicField.Equals(value) != true)) {
                    this.LabelFontitalicField = value;
                    this.RaisePropertyChanged("LabelFontitalic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelFontname {
            get {
                return this.LabelFontnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelFontnameField, value) != true)) {
                    this.LabelFontnameField = value;
                    this.RaisePropertyChanged("LabelFontname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabelFontsize {
            get {
                return this.LabelFontsizeField;
            }
            set {
                if ((this.LabelFontsizeField.Equals(value) != true)) {
                    this.LabelFontsizeField = value;
                    this.RaisePropertyChanged("LabelFontsize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelFontunderline {
            get {
                return this.LabelFontunderlineField;
            }
            set {
                if ((this.LabelFontunderlineField.Equals(value) != true)) {
                    this.LabelFontunderlineField = value;
                    this.RaisePropertyChanged("LabelFontunderline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabelIdx {
            get {
                return this.LabelIdxField;
            }
            set {
                if ((this.LabelIdxField.Equals(value) != true)) {
                    this.LabelIdxField = value;
                    this.RaisePropertyChanged("LabelIdx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelJobname {
            get {
                return this.LabelJobnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelJobnameField, value) != true)) {
                    this.LabelJobnameField = value;
                    this.RaisePropertyChanged("LabelJobname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelJobno {
            get {
                return this.LabelJobnoField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelJobnoField, value) != true)) {
                    this.LabelJobnoField = value;
                    this.RaisePropertyChanged("LabelJobno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabelLeft {
            get {
                return this.LabelLeftField;
            }
            set {
                if ((this.LabelLeftField.Equals(value) != true)) {
                    this.LabelLeftField = value;
                    this.RaisePropertyChanged("LabelLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelPrintstr {
            get {
                return this.LabelPrintstrField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelPrintstrField, value) != true)) {
                    this.LabelPrintstrField = value;
                    this.RaisePropertyChanged("LabelPrintstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelShade {
            get {
                return this.LabelShadeField;
            }
            set {
                if ((this.LabelShadeField.Equals(value) != true)) {
                    this.LabelShadeField = value;
                    this.RaisePropertyChanged("LabelShade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LabelTop {
            get {
                return this.LabelTopField;
            }
            set {
                if ((this.LabelTopField.Equals(value) != true)) {
                    this.LabelTopField = value;
                    this.RaisePropertyChanged("LabelTop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LabelType {
            get {
                return this.LabelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelTypeField, value) != true)) {
                    this.LabelTypeField = value;
                    this.RaisePropertyChanged("LabelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LabelVisible {
            get {
                return this.LabelVisibleField;
            }
            set {
                if ((this.LabelVisibleField.Equals(value) != true)) {
                    this.LabelVisibleField = value;
                    this.RaisePropertyChanged("LabelVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Orgbh {
            get {
                return this.OrgbhField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgbhField, value) != true)) {
                    this.OrgbhField = value;
                    this.RaisePropertyChanged("Orgbh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Screentype {
            get {
                return this.ScreentypeField;
            }
            set {
                if ((this.ScreentypeField.Equals(value) != true)) {
                    this.ScreentypeField = value;
                    this.RaisePropertyChanged("Screentype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagCaption {
            get {
                return this.TagCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TagCaptionField, value) != true)) {
                    this.TagCaptionField = value;
                    this.RaisePropertyChanged("TagCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TagFontbold {
            get {
                return this.TagFontboldField;
            }
            set {
                if ((this.TagFontboldField.Equals(value) != true)) {
                    this.TagFontboldField = value;
                    this.RaisePropertyChanged("TagFontbold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagFontcolor {
            get {
                return this.TagFontcolorField;
            }
            set {
                if ((this.TagFontcolorField.Equals(value) != true)) {
                    this.TagFontcolorField = value;
                    this.RaisePropertyChanged("TagFontcolor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TagFontitalic {
            get {
                return this.TagFontitalicField;
            }
            set {
                if ((this.TagFontitalicField.Equals(value) != true)) {
                    this.TagFontitalicField = value;
                    this.RaisePropertyChanged("TagFontitalic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagFontname {
            get {
                return this.TagFontnameField;
            }
            set {
                if ((object.ReferenceEquals(this.TagFontnameField, value) != true)) {
                    this.TagFontnameField = value;
                    this.RaisePropertyChanged("TagFontname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagFontsize {
            get {
                return this.TagFontsizeField;
            }
            set {
                if ((this.TagFontsizeField.Equals(value) != true)) {
                    this.TagFontsizeField = value;
                    this.RaisePropertyChanged("TagFontsize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TagFontunderline {
            get {
                return this.TagFontunderlineField;
            }
            set {
                if ((this.TagFontunderlineField.Equals(value) != true)) {
                    this.TagFontunderlineField = value;
                    this.RaisePropertyChanged("TagFontunderline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagLeftoffset {
            get {
                return this.TagLeftoffsetField;
            }
            set {
                if ((this.TagLeftoffsetField.Equals(value) != true)) {
                    this.TagLeftoffsetField = value;
                    this.RaisePropertyChanged("TagLeftoffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagTopoffset {
            get {
                return this.TagTopoffsetField;
            }
            set {
                if ((this.TagTopoffsetField.Equals(value) != true)) {
                    this.TagTopoffsetField = value;
                    this.RaisePropertyChanged("TagTopoffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TagVisible {
            get {
                return this.TagVisibleField;
            }
            set {
                if ((this.TagVisibleField.Equals(value) != true)) {
                    this.TagVisibleField = value;
                    this.RaisePropertyChanged("TagVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Windowid {
            get {
                return this.WindowidField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowidField, value) != true)) {
                    this.WindowidField = value;
                    this.RaisePropertyChanged("Windowid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Windowonid {
            get {
                return this.WindowonidField;
            }
            set {
                if ((object.ReferenceEquals(this.WindowonidField, value) != true)) {
                    this.WindowonidField = value;
                    this.RaisePropertyChanged("Windowonid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ButtomControl", Namespace="http://schemas.datacontract.org/2004/07/QM.Web.WCF")]
    public partial class ButtomControl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ButtomDefin.WCFSV.QhandyOR ButtomORField;
        
        private string IDField;
        
        private int OpTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ButtomDefin.WCFSV.QhandyOR ButtomOR {
            get {
                return this.ButtomORField;
            }
            set {
                if ((object.ReferenceEquals(this.ButtomORField, value) != true)) {
                    this.ButtomORField = value;
                    this.RaisePropertyChanged("ButtomOR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpType {
            get {
                return this.OpTypeField;
            }
            set {
                if ((this.OpTypeField.Equals(value) != true)) {
                    this.OpTypeField = value;
                    this.RaisePropertyChanged("OpType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YWOR", Namespace="http://schemas.datacontract.org/2004/07/QM.Web.WCF")]
    public partial class YWOR : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NOField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NO {
            get {
                return this.NOField;
            }
            set {
                if ((object.ReferenceEquals(this.NOField, value) != true)) {
                    this.NOField = value;
                    this.RaisePropertyChanged("NO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageWinOR", Namespace="http://schemas.datacontract.org/2004/07/QM.Entity.ParaSet")]
    public partial class PageWinOR : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int HeightField;
        
        private bool ISSelectField;
        
        private string IdField;
        
        private string NameField;
        
        private string OrgbhField;
        
        private int WidthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ISSelect {
            get {
                return this.ISSelectField;
            }
            set {
                if ((this.ISSelectField.Equals(value) != true)) {
                    this.ISSelectField = value;
                    this.RaisePropertyChanged("ISSelect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Orgbh {
            get {
                return this.OrgbhField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgbhField, value) != true)) {
                    this.OrgbhField = value;
                    this.RaisePropertyChanged("Orgbh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFSV.IBottomDA")]
    public interface IBottomDA {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/DoWork", ReplyAction="http://tempuri.org/IBottomDA/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/GetABottom", ReplyAction="http://tempuri.org/IBottomDA/GetABottomResponse")]
        System.IAsyncResult BeginGetABottom(string id, System.AsyncCallback callback, object asyncState);
        
        ButtomDefin.WCFSV.QhandyOR EndGetABottom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/GetBottomList", ReplyAction="http://tempuri.org/IBottomDA/GetBottomListResponse")]
        System.IAsyncResult BeginGetBottomList(string id, string pagewindID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR> EndGetBottomList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/Insert", ReplyAction="http://tempuri.org/IBottomDA/InsertResponse")]
        System.IAsyncResult BeginInsert(ButtomDefin.WCFSV.QhandyOR obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/UpdateBottom", ReplyAction="http://tempuri.org/IBottomDA/UpdateBottomResponse")]
        System.IAsyncResult BeginUpdateBottom(System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl> OpList, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateBottom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/GetYWList", ReplyAction="http://tempuri.org/IBottomDA/GetYWListResponse")]
        System.IAsyncResult BeginGetYWList(string wdbh, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR> EndGetYWList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/GetPageWinS", ReplyAction="http://tempuri.org/IBottomDA/GetPageWinSResponse")]
        System.IAsyncResult BeginGetPageWinS(string wdbh, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR> EndGetPageWinS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/InsertPageWin", ReplyAction="http://tempuri.org/IBottomDA/InsertPageWinResponse")]
        System.IAsyncResult BeginInsertPageWin(ButtomDefin.WCFSV.PageWinOR obj, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertPageWin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/UpdatePageWin", ReplyAction="http://tempuri.org/IBottomDA/UpdatePageWinResponse")]
        System.IAsyncResult BeginUpdatePageWin(ButtomDefin.WCFSV.PageWinOR obj, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdatePageWin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBottomDA/DeletepageWin", ReplyAction="http://tempuri.org/IBottomDA/DeletepageWinResponse")]
        System.IAsyncResult BeginDeletepageWin(string mID, System.AsyncCallback callback, object asyncState);
        
        bool EndDeletepageWin(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBottomDAChannel : ButtomDefin.WCFSV.IBottomDA, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetABottomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetABottomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ButtomDefin.WCFSV.QhandyOR Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ButtomDefin.WCFSV.QhandyOR)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBottomListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBottomListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateBottomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateBottomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetYWListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetYWListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageWinSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageWinSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertPageWinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertPageWinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePageWinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePageWinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeletepageWinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeletepageWinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BottomDAClient : System.ServiceModel.ClientBase<ButtomDefin.WCFSV.IBottomDA>, ButtomDefin.WCFSV.IBottomDA {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetABottomDelegate;
        
        private EndOperationDelegate onEndGetABottomDelegate;
        
        private System.Threading.SendOrPostCallback onGetABottomCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBottomListDelegate;
        
        private EndOperationDelegate onEndGetBottomListDelegate;
        
        private System.Threading.SendOrPostCallback onGetBottomListCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertDelegate;
        
        private EndOperationDelegate onEndInsertDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBottomDelegate;
        
        private EndOperationDelegate onEndUpdateBottomDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBottomCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetYWListDelegate;
        
        private EndOperationDelegate onEndGetYWListDelegate;
        
        private System.Threading.SendOrPostCallback onGetYWListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageWinSDelegate;
        
        private EndOperationDelegate onEndGetPageWinSDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageWinSCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertPageWinDelegate;
        
        private EndOperationDelegate onEndInsertPageWinDelegate;
        
        private System.Threading.SendOrPostCallback onInsertPageWinCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePageWinDelegate;
        
        private EndOperationDelegate onEndUpdatePageWinDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePageWinCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletepageWinDelegate;
        
        private EndOperationDelegate onEndDeletepageWinDelegate;
        
        private System.Threading.SendOrPostCallback onDeletepageWinCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BottomDAClient() {
        }
        
        public BottomDAClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BottomDAClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BottomDAClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BottomDAClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<GetABottomCompletedEventArgs> GetABottomCompleted;
        
        public event System.EventHandler<GetBottomListCompletedEventArgs> GetBottomListCompleted;
        
        public event System.EventHandler<InsertCompletedEventArgs> InsertCompleted;
        
        public event System.EventHandler<UpdateBottomCompletedEventArgs> UpdateBottomCompleted;
        
        public event System.EventHandler<GetYWListCompletedEventArgs> GetYWListCompleted;
        
        public event System.EventHandler<GetPageWinSCompletedEventArgs> GetPageWinSCompleted;
        
        public event System.EventHandler<InsertPageWinCompletedEventArgs> InsertPageWinCompleted;
        
        public event System.EventHandler<UpdatePageWinCompletedEventArgs> UpdatePageWinCompleted;
        
        public event System.EventHandler<DeletepageWinCompletedEventArgs> DeletepageWinCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ButtomDefin.WCFSV.IBottomDA.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((ButtomDefin.WCFSV.IBottomDA)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginGetABottom(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetABottom(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ButtomDefin.WCFSV.QhandyOR ButtomDefin.WCFSV.IBottomDA.EndGetABottom(System.IAsyncResult result) {
            return base.Channel.EndGetABottom(result);
        }
        
        private System.IAsyncResult OnBeginGetABottom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginGetABottom(id, callback, asyncState);
        }
        
        private object[] OnEndGetABottom(System.IAsyncResult result) {
            ButtomDefin.WCFSV.QhandyOR retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndGetABottom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetABottomCompleted(object state) {
            if ((this.GetABottomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetABottomCompleted(this, new GetABottomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetABottomAsync(string id) {
            this.GetABottomAsync(id, null);
        }
        
        public void GetABottomAsync(string id, object userState) {
            if ((this.onBeginGetABottomDelegate == null)) {
                this.onBeginGetABottomDelegate = new BeginOperationDelegate(this.OnBeginGetABottom);
            }
            if ((this.onEndGetABottomDelegate == null)) {
                this.onEndGetABottomDelegate = new EndOperationDelegate(this.OnEndGetABottom);
            }
            if ((this.onGetABottomCompletedDelegate == null)) {
                this.onGetABottomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetABottomCompleted);
            }
            base.InvokeAsync(this.onBeginGetABottomDelegate, new object[] {
                        id}, this.onEndGetABottomDelegate, this.onGetABottomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginGetBottomList(string id, string pagewindID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBottomList(id, pagewindID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR> ButtomDefin.WCFSV.IBottomDA.EndGetBottomList(System.IAsyncResult result) {
            return base.Channel.EndGetBottomList(result);
        }
        
        private System.IAsyncResult OnBeginGetBottomList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            string pagewindID = ((string)(inValues[1]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginGetBottomList(id, pagewindID, callback, asyncState);
        }
        
        private object[] OnEndGetBottomList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR> retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndGetBottomList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBottomListCompleted(object state) {
            if ((this.GetBottomListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBottomListCompleted(this, new GetBottomListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBottomListAsync(string id, string pagewindID) {
            this.GetBottomListAsync(id, pagewindID, null);
        }
        
        public void GetBottomListAsync(string id, string pagewindID, object userState) {
            if ((this.onBeginGetBottomListDelegate == null)) {
                this.onBeginGetBottomListDelegate = new BeginOperationDelegate(this.OnBeginGetBottomList);
            }
            if ((this.onEndGetBottomListDelegate == null)) {
                this.onEndGetBottomListDelegate = new EndOperationDelegate(this.OnEndGetBottomList);
            }
            if ((this.onGetBottomListCompletedDelegate == null)) {
                this.onGetBottomListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBottomListCompleted);
            }
            base.InvokeAsync(this.onBeginGetBottomListDelegate, new object[] {
                        id,
                        pagewindID}, this.onEndGetBottomListDelegate, this.onGetBottomListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginInsert(ButtomDefin.WCFSV.QhandyOR obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsert(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ButtomDefin.WCFSV.IBottomDA.EndInsert(System.IAsyncResult result) {
            return base.Channel.EndInsert(result);
        }
        
        private System.IAsyncResult OnBeginInsert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ButtomDefin.WCFSV.QhandyOR obj = ((ButtomDefin.WCFSV.QhandyOR)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginInsert(obj, callback, asyncState);
        }
        
        private object[] OnEndInsert(System.IAsyncResult result) {
            bool retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndInsert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertCompleted(object state) {
            if ((this.InsertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCompleted(this, new InsertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAsync(ButtomDefin.WCFSV.QhandyOR obj) {
            this.InsertAsync(obj, null);
        }
        
        public void InsertAsync(ButtomDefin.WCFSV.QhandyOR obj, object userState) {
            if ((this.onBeginInsertDelegate == null)) {
                this.onBeginInsertDelegate = new BeginOperationDelegate(this.OnBeginInsert);
            }
            if ((this.onEndInsertDelegate == null)) {
                this.onEndInsertDelegate = new EndOperationDelegate(this.OnEndInsert);
            }
            if ((this.onInsertCompletedDelegate == null)) {
                this.onInsertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCompleted);
            }
            base.InvokeAsync(this.onBeginInsertDelegate, new object[] {
                        obj}, this.onEndInsertDelegate, this.onInsertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginUpdateBottom(System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl> OpList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBottom(OpList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ButtomDefin.WCFSV.IBottomDA.EndUpdateBottom(System.IAsyncResult result) {
            return base.Channel.EndUpdateBottom(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBottom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl> OpList = ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl>)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginUpdateBottom(OpList, callback, asyncState);
        }
        
        private object[] OnEndUpdateBottom(System.IAsyncResult result) {
            bool retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndUpdateBottom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateBottomCompleted(object state) {
            if ((this.UpdateBottomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBottomCompleted(this, new UpdateBottomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBottomAsync(System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl> OpList) {
            this.UpdateBottomAsync(OpList, null);
        }
        
        public void UpdateBottomAsync(System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl> OpList, object userState) {
            if ((this.onBeginUpdateBottomDelegate == null)) {
                this.onBeginUpdateBottomDelegate = new BeginOperationDelegate(this.OnBeginUpdateBottom);
            }
            if ((this.onEndUpdateBottomDelegate == null)) {
                this.onEndUpdateBottomDelegate = new EndOperationDelegate(this.OnEndUpdateBottom);
            }
            if ((this.onUpdateBottomCompletedDelegate == null)) {
                this.onUpdateBottomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBottomCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBottomDelegate, new object[] {
                        OpList}, this.onEndUpdateBottomDelegate, this.onUpdateBottomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginGetYWList(string wdbh, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetYWList(wdbh, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR> ButtomDefin.WCFSV.IBottomDA.EndGetYWList(System.IAsyncResult result) {
            return base.Channel.EndGetYWList(result);
        }
        
        private System.IAsyncResult OnBeginGetYWList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wdbh = ((string)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginGetYWList(wdbh, callback, asyncState);
        }
        
        private object[] OnEndGetYWList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR> retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndGetYWList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetYWListCompleted(object state) {
            if ((this.GetYWListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetYWListCompleted(this, new GetYWListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetYWListAsync(string wdbh) {
            this.GetYWListAsync(wdbh, null);
        }
        
        public void GetYWListAsync(string wdbh, object userState) {
            if ((this.onBeginGetYWListDelegate == null)) {
                this.onBeginGetYWListDelegate = new BeginOperationDelegate(this.OnBeginGetYWList);
            }
            if ((this.onEndGetYWListDelegate == null)) {
                this.onEndGetYWListDelegate = new EndOperationDelegate(this.OnEndGetYWList);
            }
            if ((this.onGetYWListCompletedDelegate == null)) {
                this.onGetYWListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetYWListCompleted);
            }
            base.InvokeAsync(this.onBeginGetYWListDelegate, new object[] {
                        wdbh}, this.onEndGetYWListDelegate, this.onGetYWListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginGetPageWinS(string wdbh, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPageWinS(wdbh, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR> ButtomDefin.WCFSV.IBottomDA.EndGetPageWinS(System.IAsyncResult result) {
            return base.Channel.EndGetPageWinS(result);
        }
        
        private System.IAsyncResult OnBeginGetPageWinS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string wdbh = ((string)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginGetPageWinS(wdbh, callback, asyncState);
        }
        
        private object[] OnEndGetPageWinS(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR> retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndGetPageWinS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageWinSCompleted(object state) {
            if ((this.GetPageWinSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageWinSCompleted(this, new GetPageWinSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageWinSAsync(string wdbh) {
            this.GetPageWinSAsync(wdbh, null);
        }
        
        public void GetPageWinSAsync(string wdbh, object userState) {
            if ((this.onBeginGetPageWinSDelegate == null)) {
                this.onBeginGetPageWinSDelegate = new BeginOperationDelegate(this.OnBeginGetPageWinS);
            }
            if ((this.onEndGetPageWinSDelegate == null)) {
                this.onEndGetPageWinSDelegate = new EndOperationDelegate(this.OnEndGetPageWinS);
            }
            if ((this.onGetPageWinSCompletedDelegate == null)) {
                this.onGetPageWinSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageWinSCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageWinSDelegate, new object[] {
                        wdbh}, this.onEndGetPageWinSDelegate, this.onGetPageWinSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginInsertPageWin(ButtomDefin.WCFSV.PageWinOR obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertPageWin(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ButtomDefin.WCFSV.IBottomDA.EndInsertPageWin(System.IAsyncResult result) {
            return base.Channel.EndInsertPageWin(result);
        }
        
        private System.IAsyncResult OnBeginInsertPageWin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ButtomDefin.WCFSV.PageWinOR obj = ((ButtomDefin.WCFSV.PageWinOR)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginInsertPageWin(obj, callback, asyncState);
        }
        
        private object[] OnEndInsertPageWin(System.IAsyncResult result) {
            bool retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndInsertPageWin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertPageWinCompleted(object state) {
            if ((this.InsertPageWinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertPageWinCompleted(this, new InsertPageWinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertPageWinAsync(ButtomDefin.WCFSV.PageWinOR obj) {
            this.InsertPageWinAsync(obj, null);
        }
        
        public void InsertPageWinAsync(ButtomDefin.WCFSV.PageWinOR obj, object userState) {
            if ((this.onBeginInsertPageWinDelegate == null)) {
                this.onBeginInsertPageWinDelegate = new BeginOperationDelegate(this.OnBeginInsertPageWin);
            }
            if ((this.onEndInsertPageWinDelegate == null)) {
                this.onEndInsertPageWinDelegate = new EndOperationDelegate(this.OnEndInsertPageWin);
            }
            if ((this.onInsertPageWinCompletedDelegate == null)) {
                this.onInsertPageWinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertPageWinCompleted);
            }
            base.InvokeAsync(this.onBeginInsertPageWinDelegate, new object[] {
                        obj}, this.onEndInsertPageWinDelegate, this.onInsertPageWinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginUpdatePageWin(ButtomDefin.WCFSV.PageWinOR obj, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePageWin(obj, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ButtomDefin.WCFSV.IBottomDA.EndUpdatePageWin(System.IAsyncResult result) {
            return base.Channel.EndUpdatePageWin(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePageWin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ButtomDefin.WCFSV.PageWinOR obj = ((ButtomDefin.WCFSV.PageWinOR)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginUpdatePageWin(obj, callback, asyncState);
        }
        
        private object[] OnEndUpdatePageWin(System.IAsyncResult result) {
            bool retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndUpdatePageWin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePageWinCompleted(object state) {
            if ((this.UpdatePageWinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePageWinCompleted(this, new UpdatePageWinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePageWinAsync(ButtomDefin.WCFSV.PageWinOR obj) {
            this.UpdatePageWinAsync(obj, null);
        }
        
        public void UpdatePageWinAsync(ButtomDefin.WCFSV.PageWinOR obj, object userState) {
            if ((this.onBeginUpdatePageWinDelegate == null)) {
                this.onBeginUpdatePageWinDelegate = new BeginOperationDelegate(this.OnBeginUpdatePageWin);
            }
            if ((this.onEndUpdatePageWinDelegate == null)) {
                this.onEndUpdatePageWinDelegate = new EndOperationDelegate(this.OnEndUpdatePageWin);
            }
            if ((this.onUpdatePageWinCompletedDelegate == null)) {
                this.onUpdatePageWinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePageWinCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePageWinDelegate, new object[] {
                        obj}, this.onEndUpdatePageWinDelegate, this.onUpdatePageWinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ButtomDefin.WCFSV.IBottomDA.BeginDeletepageWin(string mID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletepageWin(mID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ButtomDefin.WCFSV.IBottomDA.EndDeletepageWin(System.IAsyncResult result) {
            return base.Channel.EndDeletepageWin(result);
        }
        
        private System.IAsyncResult OnBeginDeletepageWin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mID = ((string)(inValues[0]));
            return ((ButtomDefin.WCFSV.IBottomDA)(this)).BeginDeletepageWin(mID, callback, asyncState);
        }
        
        private object[] OnEndDeletepageWin(System.IAsyncResult result) {
            bool retVal = ((ButtomDefin.WCFSV.IBottomDA)(this)).EndDeletepageWin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeletepageWinCompleted(object state) {
            if ((this.DeletepageWinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletepageWinCompleted(this, new DeletepageWinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletepageWinAsync(string mID) {
            this.DeletepageWinAsync(mID, null);
        }
        
        public void DeletepageWinAsync(string mID, object userState) {
            if ((this.onBeginDeletepageWinDelegate == null)) {
                this.onBeginDeletepageWinDelegate = new BeginOperationDelegate(this.OnBeginDeletepageWin);
            }
            if ((this.onEndDeletepageWinDelegate == null)) {
                this.onEndDeletepageWinDelegate = new EndOperationDelegate(this.OnEndDeletepageWin);
            }
            if ((this.onDeletepageWinCompletedDelegate == null)) {
                this.onDeletepageWinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletepageWinCompleted);
            }
            base.InvokeAsync(this.onBeginDeletepageWinDelegate, new object[] {
                        mID}, this.onEndDeletepageWinDelegate, this.onDeletepageWinCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ButtomDefin.WCFSV.IBottomDA CreateChannel() {
            return new BottomDAClientChannel(this);
        }
        
        private class BottomDAClientChannel : ChannelBase<ButtomDefin.WCFSV.IBottomDA>, ButtomDefin.WCFSV.IBottomDA {
            
            public BottomDAClientChannel(System.ServiceModel.ClientBase<ButtomDefin.WCFSV.IBottomDA> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginGetABottom(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetABottom", _args, callback, asyncState);
                return _result;
            }
            
            public ButtomDefin.WCFSV.QhandyOR EndGetABottom(System.IAsyncResult result) {
                object[] _args = new object[0];
                ButtomDefin.WCFSV.QhandyOR _result = ((ButtomDefin.WCFSV.QhandyOR)(base.EndInvoke("GetABottom", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBottomList(string id, string pagewindID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = pagewindID;
                System.IAsyncResult _result = base.BeginInvoke("GetBottomList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR> EndGetBottomList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR> _result = ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.QhandyOR>)(base.EndInvoke("GetBottomList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsert(ButtomDefin.WCFSV.QhandyOR obj, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = obj;
                System.IAsyncResult _result = base.BeginInvoke("Insert", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInsert(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Insert", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateBottom(System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.ButtomControl> OpList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = OpList;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBottom", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateBottom(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateBottom", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetYWList(string wdbh, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wdbh;
                System.IAsyncResult _result = base.BeginInvoke("GetYWList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR> EndGetYWList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR> _result = ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.YWOR>)(base.EndInvoke("GetYWList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPageWinS(string wdbh, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = wdbh;
                System.IAsyncResult _result = base.BeginInvoke("GetPageWinS", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR> EndGetPageWinS(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR> _result = ((System.Collections.ObjectModel.ObservableCollection<ButtomDefin.WCFSV.PageWinOR>)(base.EndInvoke("GetPageWinS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertPageWin(ButtomDefin.WCFSV.PageWinOR obj, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = obj;
                System.IAsyncResult _result = base.BeginInvoke("InsertPageWin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInsertPageWin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("InsertPageWin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePageWin(ButtomDefin.WCFSV.PageWinOR obj, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = obj;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePageWin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdatePageWin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdatePageWin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeletepageWin(string mID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mID;
                System.IAsyncResult _result = base.BeginInvoke("DeletepageWin", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeletepageWin(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeletepageWin", _args, result)));
                return _result;
            }
        }
    }
}
